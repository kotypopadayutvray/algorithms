#include "../bfprt/bfprt.h"
#include "../heap_sort/heap_sort.h"
#include "../mqs_3way/mqs_3way.h"
#include "../qs/qs.h"
#include "../qs_3way/qs_3way.h"
#include <iostream>

int array1[] = {
  -50,43,-99,-28,80,49,23,61,90,-99,36,-81,63,4,-86,90,57,6,74,77,23,
  56,44,-54,-89,-7,3,0,-15,74,49,-24,53,38,-91,96,58,52,5,64,-11,41,14,
  8,-88,49,43,75,-81,-93,27,-52,33,-74,-46,-81,-32,-91,39,19,-23,-93,-14,
  100,81,56,43,94,-87,63,35,36,21,95,-12,-17,-11,12,26,-25,-12,80,50,21,
  3,-98,-54,57,54,-35,91,-10,-81,-99,62,58,25,-51,-81,8
};

int array2[] = {
  -50,43,-99,-28,80,49,23,61,90,-99,36,-81,63,4,-86,90,57,6,74,77,23,
  56,44,-54,-89,-7,3,0,-15,74,49,-24,53,38,-91,96,58,52,5,64,-11,41,14,
  8,-88,49,43,75,-81,-93,27,-52,33,-74,-46,-81,-32,-91,39,19,-23,-93,-14,
  100,81,56,43,94,-87,63,35,36,21,95,-12,-17,-11,12,26,-25,-12,80,50,21,
  3,-98,-54,57,54,-35,91,-10,-81,-99,62,58,25,-51,-81,8
};

int array3[] = {
  -50,43,-99,-28,80,49,23,61,90,-99,36,-81,63,4,-86,90,57,6,74,77,23,
  56,44,-54,-89,-7,3,0,-15,74,49,-24,53,38,-91,96,58,52,5,64,-11,41,14,
  8,-88,49,43,75,-81,-93,27,-52,33,-74,-46,-81,-32,-91,39,19,-23,-93,-14,
  100,81,56,43,94,-87,63,35,36,21,95,-12,-17,-11,12,26,-25,-12,80,50,21,
  3,-98,-54,57,54,-35,91,-10,-81,-99,62,58,25,-51,-81,8
};

int array4[] = {
  -50,43,-99,-28,80,49,23,61,90,-99,36,-81,63,4,-86,90,57,6,74,77,23,
  56,44,-54,-89,-7,3,0,-15,74,49,-24,53,38,-91,96,58,52,5,64,-11,41,14,
  8,-88,49,43,75,-81,-93,27,-52,33,-74,-46,-81,-32,-91,39,19,-23,-93,-14,
  100,81,56,43,94,-87,63,35,36,21,95,-12,-17,-11,12,26,-25,-12,80,50,21,
  3,-98,-54,57,54,-35,91,-10,-81,-99,62,58,25,-51,-81,8
};

int array5[] = {
  -50,43,-99,-28,80,49,23,61,90,-99,36,-81,63,4,-86,90,57,6,74,77,23,
  56,44,-54,-89,-7,3,0,-15,74,49,-24,53,38,-91,96,58,52,5,64,-11,41,14,
  8,-88,49,43,75,-81,-93,27,-52,33,-74,-46,-81,-32,-91,39,19,-23,-93,-14,
  100,81,56,43,94,-87,63,35,36,21,95,-12,-17,-11,12,26,-25,-12,80,50,21,
  3,-98,-54,57,54,-35,91,-10,-81,-99,62,58,25,-51,-81,8
};

int main() {
  int size = sizeof(array3) / sizeof(int);
  quickSort(array1, 0, 99);
  quickSort3Way(array2, 0, 99);
  heapSort(array3, size);

  int passes = 0;
  int failures = 0;

  for (int i = 0; i < 100; i++) {
    int bfprtResult = kthOrderStatistic(array4, 0, size - 1, i + 1);
    int mqs = modifiedQuickSort(array5, 0, 99, i);
    if (array1[i] == array2[i] && array2[i] == array3[i]) {
      passes++;
    } else {
      failures++;
      std::cout << "qs: "    << array1[i] << ' '
                << "qs3: "   << array2[i] << ' '
                << "hs: "    << array3[i] << ' '
                << "BFPRT: " << bfprtResult << ' '
                << "MQS: "   << mqs << std::endl;
    }
  }
  std::cout << "Testing results:\t" << passes << " passes; \t" << failures << " failures." << std::endl;
  if (!failures) {
    std::cout << "Test passed succesfully!" << std::endl;
  } else {
    std::cout << "Test passed with failures." << std::endl;
  }
  return 0;
}
